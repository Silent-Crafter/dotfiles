# REQUIRES https://github.com/jonaburg/picom

#################################
#          Animations           #
#################################
transition-length = 300
transition-pow-x = 0.1
transition-pow-y = 0.1
transition-pow-w = 0.1
transition-pow-h = 0.1
size-transition = true


#################################
#             Corners           #
#################################
corner-radius = 10.0;
rounded-corners-exclude = [
  #"window_type = 'normal'",
  "class_g = 'awesome'",
  "class_g = 'URxvt'",
  "class_g = 'XTerm'",
  "class_g = 'Polybar'",
  "class_g = 'code-oss'",
  "class_g = 'Thunderbird'"
];
round-borders = 1;
round-borders-exclude = [
];

#################################
#             Shadows           #
#################################


shadow = false;

# The blur radius for shadows, in pixels. (defaults to 12)
shadow-radius = 7;
shadow-opacity = .75

shadow-offset-x = -15;
shadow-offset-y = -15;

# shadow-red = 0
# shadow-green = 0
# shadow-blue = 0

# Do not paint shadows on shaped windows. Note shaped windows 
# here means windows setting its shape through X Shape extension. 
# Those using ARGB background is beyond our control. 
# Deprecated, use 
#   shadow-exclude = 'bounding_shaped'
# or 
#   shadow-exclude = 'bounding_shaped && !rounded_corners'
# instead.

shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "class_g = 'slop'",
  "class_g = 'Polybar'",
  "_GTK_FRAME_EXTENTS@:c"
];

#################################
#           Fading              #
#################################


# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
fading = true;

fade-in-step = 0.03;
fade-out-step = 0.03;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
# fade-delta = 10

fade-exclude = [
  "class_g = 'slop'"   # maim
]

# no-fading-openclose = false
# no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################

active-opacity = 0.9;
inactive-opacity = 0.8;
frame-opacity = 0.7;
popup_menu = { opacity = 1.0; }
dropdown_menu = { opacity = 1.0; }

inactive-opacity-override = true;

focus-exclude = [
  "class_g = 'Cairo-clock'",
  "class_g = 'Bar'",                    # lemonbar
  "class_g = 'slop'"                    # maim
];

opacity-rule = [
  "80:class_g     = 'Bar'",             # lemonbar
  "100:class_g    = 'slop'",            # maim
  "60:class_g	  = 'Rofi'",
  "60:class_g	  = 'rofi'",
  #"100:class_g    = 'Polybar'",
  "90:class_g     = 'TelegramDesktop'",
  "85:class_g	  = 'firefox'",
  "90:class_g	  = 'LibreWolf'",
  "100:class_g    = 'Thunderbird'",
  "100:class_g    = 'latte-dock'",
  "100:class_g	  = 'lattedock'",
  "100:class_g	  = 'kitty'",
  "90:class_g	  = 'Zathura'"
];


#################################
#     Background-Blurring       #
#################################


blur-background = true;
# blur-background-frame = false;
# blur-backgroud-fixed = true;

blur: {
  # requires: https://github.com/ibhagwan/picom
  method = "kawase";
  #method = "kernel";
  strength = 5;
  # deviation = 1.0;
  background = true;
  background-frame = false;
  background-fixed = false;
  # kern = "3x3box";
}

blur-background-exclude = [
  #"window_type = 'dock'",
  #"window_type = 'desktop'",
  "class_g = 'slop'",
  "class_g = 'latte-dock'",
  "class_g = 'lattedock'",
  #"class_g = 'Polybar'",
  "_GTK_FRAME_EXTENTS@:c"
];


#################################
#       General Settings        #
#################################

daemon = true

experimental-backends = true;
backend = "glx";
#backend = "xrender";

vsync = true

# dbus = false

# Try to detect WM windows (a non-override-redirect window with no 
# child that has 'WM_STATE') and mark them as active.
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
mark-ovredir-focused = true;

detect-rounded-corners = true;
detect-client-opacity = true;

# If 0, picom will try detecting this with X RandR extension.
refresh-rate = 0

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, 
# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy, 
# provided that the WM supports it.
#
# use-ewmh-active-win = false

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows 
# in the same group focused at the same time.
detect-transient = true

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same 
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if 
# detect-transient is enabled, too.
detect-client-leader = true

# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer. 
# Might cause incorrect opacity when rendering transparent content (but never 
# practically happened) and may not work with blur-background. 
# My tests show a 15% performance boost. Recommended.
#
# glx-no-stencil = false

# Disable the use of damage information. 
# This cause the whole screen to be redrawn everytime, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
#
# no-use-damage = false
#use-damage = true (Causing Weird Black semi opaque rectangles when terminal is opened)
#Changing use-damage to false fixes the problem
use-damage = false

# Make transparent windows clip other windows like non-transparent windows do,
# instead of blending on top of them.
#
#transparent-clipping = true

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter. 
# If using the "TRACE" log level, it's better to log into a file 
# using *--log-file*, since it can generate a huge stream of logs.
log-level = "error";

# Set the log file.
# If *--log-file* is never specified, logs will be written to stderr. 
# Otherwise, logs will to written to the given file, though some of the early 
# logs might still be written to the stderr. 
# When setting this option from the config file, it is recommended to use an absolute path.
# log-file = '/path/to/your/log/file'

# Show all X errors (for debugging)
# show-all-xerrors = false

# Write process ID to a file.
# write-pid-path = '/path/to/your/log/file'

# Window type settings
# 
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: 
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility", 
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu", 
#     "tooltip", "notification", "combo", and "dnd".
# 
# Following per window-type options are available: ::
# 
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
# 
#   opacity:::
#     Controls default opacity of the window type.
# 
#   focus:::
#     Controls whether the window of this type is to be always considered focused. 
#     (By default, all window types except "normal" and "dialog" has this on.)
# 
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you 
#     normally won't be able to see. Useful when the window has parts of it 
#     transparent, and you want shadows in those areas.
# 
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become 
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection, 
#     you can set this to `true`.
#
wintypes:
{
  normal = { fade = false; shadow = false; }
  tooltip = { fade = true; shadow = false; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 1.0; }
  dropdown_menu = { opacity = 1.0; }
};
